-- 1. List of markets where "Atliq Exclusive" operates in APAC
SELECT market
FROM dim_customer 
WHERE customer = 'Atliq Exclusive' 
  AND region = 'APAC'
GROUP BY market
ORDER BY market;

-- 2. Percentage of unique product increase in 2021 vs. 2020
WITH products_2020 AS (
    SELECT COUNT(DISTINCT product_code) AS A
    FROM fact_sales_monthly
    WHERE fiscal_year = 2020
),
products_2021 AS (
    SELECT COUNT(DISTINCT product_code) AS B
    FROM fact_sales_monthly
    WHERE fiscal_year = 2021
)
SELECT 
    p2020.A AS unique_product_2020, 
    p2021.B AS unique_products_2021,
    ROUND((p2021.B - p2020.A) * 100.0 / p2020.A, 2) AS percentage_chg
FROM products_2020 p2020
JOIN products_2021 p2021 ON 1=1;

-- 3. Unique product counts for each segment (descending order)
SELECT segment, COUNT(DISTINCT product_code) AS product_count
FROM dim_product
GROUP BY segment
ORDER BY product_count DESC;

-- 4. Segment with most increase in unique products in 2021 vs 2020
WITH CTE1 AS (
    SELECT P.segment AS A, COUNT(DISTINCT FS.product_code) AS B 
    FROM dim_product P
    JOIN fact_sales_monthly FS ON P.product_code = FS.product_code
    WHERE FS.fiscal_year = 2020
    GROUP BY P.segment
),
CTE2 AS (
    SELECT P.segment AS C, COUNT(DISTINCT FS.product_code) AS D 
    FROM dim_product P
    JOIN fact_sales_monthly FS ON P.product_code = FS.product_code
    WHERE FS.fiscal_year = 2021
    GROUP BY P.segment
)
SELECT 
    CTE1.A AS segment, 
    CTE1.B AS product_count_2020, 
    CTE2.D AS product_count_2021, 
    (CTE2.D - CTE1.B) AS difference
FROM CTE1
JOIN CTE2 ON CTE1.A = CTE2.C;

-- 5. Products with highest and lowest manufacturing costs
SELECT product_code, product, manufacturing_cost
FROM dim_product p
JOIN fact_manufacturing_cost m USING(product_code)
WHERE manufacturing_cost = (
        SELECT MAX(manufacturing_cost) 
        FROM fact_manufacturing_cost
    )
   OR manufacturing_cost = (
        SELECT MIN(manufacturing_cost) 
        FROM fact_manufacturing_cost
    );

-- 6. Top 5 customers with highest average pre_invoice_discount_pct in 2021 (India)
SELECT customer_code, customer,
       ROUND(AVG(pre_invoice_discount_pct * 100), 2) AS avg_discount
FROM dim_customer c
JOIN fact_pre_invoice_deductions d USING(customer_code)
WHERE market = 'India' 
  AND fiscal_year = 2021
GROUP BY customer_code, customer
ORDER BY avg_discount DESC
LIMIT 5;

-- 7. Gross sales amount for "Atliq Exclusive" per month
SELECT 
    MONTH(s.date) AS month,
    s.fiscal_year AS year,
    SUM(g.gross_price * s.sold_quantity) AS Gross_sales_monthly
FROM fact_sales_monthly s
JOIN dim_customer c ON c.customer_code = s.customer_code
JOIN fact_gross_price g ON g.product_code = s.product_code
WHERE customer = 'Atliq Exclusive'
GROUP BY month, year
ORDER BY year;

-- 8. Quarter with max total_sold_quantity in 2020
SELECT 
    CASE 
        WHEN MONTH(date) IN (9, 10, 11) THEN 'Q1'
        WHEN MONTH(date) IN (12, 1, 2) THEN 'Q2'
        WHEN MONTH(date) IN (3, 4, 5) THEN 'Q3'
        WHEN MONTH(date) IN (6, 7, 8) THEN 'Q4'
    END AS Quarter, 
    SUM(sold_quantity) AS total_sum_qty
FROM fact_sales_monthly 
WHERE fiscal_year = 2020 
GROUP BY Quarter
ORDER BY total_sum_qty DESC;

-- 9. Channel with highest gross sales in 2021 and percentage contribution
SELECT 
    c.channel, 
    ROUND(SUM((gross_price * sold_quantity) / 1000000), 2) AS gross_sales_mln,
    (SUM(gross_price * sold_quantity) / SUM(SUM(gross_price * sold_quantity)) OVER()) * 100 AS percentage
FROM dim_customer c
JOIN fact_sales_monthly s USING(customer_code)
JOIN fact_gross_price g ON g.product_code = s.product_code
WHERE s.fiscal_year = 2021
GROUP BY c.channel;

-- 10. Top 3 products in each division by total_sold_quantity (2021)
WITH ct1 AS (
    SELECT 
        division, 
        s.product_code, 
        p.product,
        SUM(sold_quantity) AS total_sold_quantity,
        DENSE_RANK() OVER(PARTITION BY division ORDER BY SUM(sold_quantity) DESC) AS rank_order
    FROM fact_sales_monthly s
    JOIN dim_product p ON s.product_code = p.product_code
    WHERE fiscal_year = 2021
    GROUP BY division, p.product_code
)
SELECT * FROM ct1
WHERE rank_order <= 3;
